/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.data.xmlgenration;

import GraphMining.com.graph.ManageFrequencies.CreateTheFrequencyMatrix;
import GraphMining.com.graph.ManageFrequencies.GetMatrixValuesWithFrequencies;
import GraphMining.com.graph.frequency.ExcelSheetProcessing;
import GraphMining.com.graph.frequency.GetMatrixValuesFromExcel;
import GraphMining.com.graph.frequency.ReadAllTheTextFilesandCreateOneFile;
import GraphMining.com.graph.main.IdentifySubGraphs;
import GraphMining.com.graph.matricesandedges.GeneratringMatricesWithData;
import GraphMining.com.graph.matricesandedges.ReadingMatrices;
import GraphMining.com.graph.matricesandedges.UniqueNodes;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author n9572791
 */
public class GraphAnalysis extends javax.swing.JFrame {

    static String excelFileLocation = ""; //The location of the excel files with the matrices
    static String txtFileLocation = ""; //This is the location of the textfiles created based on the matrices in the excel files
    static String singleMatrixLocation = ""; //This is the location of the text file which contains the matrices for all the graphs
    static String txtFreqFileLocation = ""; //This is the location of the textfiles created based on the matrices in the excel files with the frequencies
    static String singleFMatrixLocation = "";//This is the location of the text file which contains the matrices for all the graphs with frequencies
    static int[][][] adjacencyMarix; //This is the adjacency matrix without frequencies.
    static int[][][] adjacencyMarixWithFrequencies; //This is the adjacency matrix with frequencies.
    
    /**
     * Creates new form GraphAnalysis
     */
    public GraphAnalysis() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        loadExcelFilesBtn = new javax.swing.JButton();
        loadExcelTextFeild = new javax.swing.JTextField();
        textFileGenerationBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        saveTxtFeild = new javax.swing.JTextField();
        saveTxtFileBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        loadMtxTxt = new javax.swing.JTextField();
        loadMatrixBtn = new javax.swing.JButton();
        saveSingleMatrixBtn = new javax.swing.JButton();
        saveSingleMatrixTxt = new javax.swing.JTextField();
        singleGraphGenerationBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        loadMultiFrequencyTxt = new javax.swing.JTextField();
        loadMultifrequencyExcelBtn = new javax.swing.JButton();
        saveMultiFrequncyTxt = new javax.swing.JTextField();
        saveMultiFTxtBtn = new javax.swing.JButton();
        mfTxtFileGenBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        loadFMtrixTxt = new javax.swing.JTextField();
        saveSingleFMatrixTxt = new javax.swing.JTextField();
        saveSingleFMatrixBtn = new javax.swing.JButton();
        loadFMatrixBtn = new javax.swing.JButton();
        singleFGraphGenerationBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        locationofSingleGMatrixTxt = new javax.swing.JTextField();
        locationofSingleGMatrixBtn = new javax.swing.JButton();
        generateSubGraphBtn = new javax.swing.JButton();
        fMatrixGenrateBtn = new javax.swing.JButton();
        fMatrixLocationBtn = new javax.swing.JButton();
        fMatixLocationTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loadExcelFilesBtn.setText("Load Excel");
        loadExcelFilesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadExcelFilesBtnActionPerformed(evt);
            }
        });

        textFileGenerationBtn.setText("Generate Text Files");
        textFileGenerationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFileGenerationBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Create set of files with Matrix values for subgraph mining");

        saveTxtFileBtn.setText("Save Txt Files");
        saveTxtFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTxtFileBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(saveTxtFeild, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loadExcelTextFeild, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFileGenerationBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(loadExcelFilesBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveTxtFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadExcelFilesBtn)
                    .addComponent(loadExcelTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveTxtFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveTxtFileBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(textFileGenerationBtn)
                .addGap(79, 79, 79))
        );

        jTabbedPane2.addTab("Matrix Creation", jPanel1);

        loadMatrixBtn.setText("Load Matrix Text");
        loadMatrixBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMatrixBtnActionPerformed(evt);
            }
        });

        saveSingleMatrixBtn.setText("Save Single Matrix");
        saveSingleMatrixBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSingleMatrixBtnActionPerformed(evt);
            }
        });

        singleGraphGenerationBtn.setText("Single Graph Generation");
        singleGraphGenerationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleGraphGenerationBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Create Single Matrix File for subgraph mining");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(476, 476, 476)
                        .addComponent(singleGraphGenerationBtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(loadMtxTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(loadMatrixBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(saveSingleMatrixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(saveSingleMatrixBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadMtxTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadMatrixBtn))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveSingleMatrixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveSingleMatrixBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addComponent(singleGraphGenerationBtn)
                .addGap(80, 80, 80))
        );

        jTabbedPane2.addTab("Individual Matrix", jPanel2);

        jLabel3.setText("Create set of files with Matrix values for frequency mining");

        loadMultifrequencyExcelBtn.setText("Load Excel");
        loadMultifrequencyExcelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMultifrequencyExcelBtnActionPerformed(evt);
            }
        });

        saveMultiFTxtBtn.setText("Save Txt Files");
        saveMultiFTxtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMultiFTxtBtnActionPerformed(evt);
            }
        });

        mfTxtFileGenBtn.setText("Generate Text Files");
        mfTxtFileGenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mfTxtFileGenBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(saveMultiFrequncyTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loadMultiFrequencyTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mfTxtFileGenBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(loadMultifrequencyExcelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveMultiFTxtBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadMultifrequencyExcelBtn)
                    .addComponent(loadMultiFrequencyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveMultiFrequncyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveMultiFTxtBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(mfTxtFileGenBtn)
                .addGap(79, 79, 79))
        );

        jTabbedPane2.addTab("Frequency Matrix", jPanel3);

        jLabel4.setText("Create Single Frequency Matrix File for subgraph mining");

        saveSingleFMatrixBtn.setText("Save Single Matrix");
        saveSingleFMatrixBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSingleFMatrixBtnActionPerformed(evt);
            }
        });

        loadFMatrixBtn.setText("Load Matrix Text");
        loadFMatrixBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFMatrixBtnActionPerformed(evt);
            }
        });

        singleFGraphGenerationBtn.setText("Single Graph Generation");
        singleFGraphGenerationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleFGraphGenerationBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(476, 476, 476)
                        .addComponent(singleFGraphGenerationBtn))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(loadFMtrixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(loadFMatrixBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(saveSingleFMatrixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(saveSingleFMatrixBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadFMtrixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadFMatrixBtn))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveSingleFMatrixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveSingleFMatrixBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addComponent(singleFGraphGenerationBtn)
                .addGap(80, 80, 80))
        );

        jTabbedPane2.addTab("Individual F. Matrix", jPanel4);

        locationofSingleGMatrixBtn.setText("Matrix For Sibgraphs");
        locationofSingleGMatrixBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationofSingleGMatrixBtnActionPerformed(evt);
            }
        });

        generateSubGraphBtn.setText("Generate SubGraphs");
        generateSubGraphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateSubGraphBtnActionPerformed(evt);
            }
        });

        fMatrixGenrateBtn.setText("Generate F Matix");
        fMatrixGenrateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fMatrixGenrateBtnActionPerformed(evt);
            }
        });

        fMatrixLocationBtn.setText("Matrix for Frequency");
        fMatrixLocationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fMatrixLocationBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(fMatixLocationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fMatrixLocationBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fMatrixGenrateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(locationofSingleGMatrixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(generateSubGraphBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(locationofSingleGMatrixBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationofSingleGMatrixTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationofSingleGMatrixBtn))
                .addGap(44, 44, 44)
                .addComponent(generateSubGraphBtn)
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fMatixLocationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fMatrixLocationBtn))
                .addGap(44, 44, 44)
                .addComponent(fMatrixGenrateBtn)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Frequency Subgraphs", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadExcelFilesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadExcelFilesBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                excelFileLocation = file.getAbsolutePath();
                loadExcelTextFeild.setText(excelFileLocation);
                
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_loadExcelFilesBtnActionPerformed

    private void textFileGenerationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFileGenerationBtnActionPerformed
        // TODO add your handling code here:
        txtFileLocation = txtFileLocation.replace("\\", "/");
        excelFileLocation = excelFileLocation.replace("\\", "/");
        final File folder = new File(excelFileLocation);
        ExcelSheetProcessing exProcessing = new ExcelSheetProcessing();
        ArrayList uniqueNames;
        
        try {
                uniqueNames = exProcessing.readExcelFiles(folder);
                GetMatrixValuesFromExcel getMatrixValues = new GetMatrixValuesFromExcel();
                getMatrixValues.readExcelFiles(folder,uniqueNames,txtFileLocation);
        } catch (IOException ex) {
            Logger.getLogger(GraphAnalysis.class.getName()).log(Level.SEVERE, null, ex);
        }
                
                
    }//GEN-LAST:event_textFileGenerationBtnActionPerformed

    private void loadMatrixBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMatrixBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                txtFileLocation = file.getAbsolutePath();
                loadMtxTxt.setText(txtFileLocation);
                
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
        
    }//GEN-LAST:event_loadMatrixBtnActionPerformed

    private void saveSingleMatrixBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSingleMatrixBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                singleMatrixLocation = file.getAbsolutePath();
                saveSingleMatrixTxt.setText(singleMatrixLocation);
                
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_saveSingleMatrixBtnActionPerformed

    private void singleGraphGenerationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleGraphGenerationBtnActionPerformed
        try {
            // TODO add your handling code here:
            txtFileLocation = txtFileLocation.replace("\\", "/");
            singleMatrixLocation = singleMatrixLocation.replace("\\", "/");
            ReadAllTheTextFilesandCreateOneFile.readingTheTextFiles(txtFileLocation,singleMatrixLocation);
            final File folder = new File(singleMatrixLocation);
            adjacencyMarix = ReadingMatrices.listFilesForFolder(folder);
        } catch (Exception ex) {
            Logger.getLogger(GraphAnalysis.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_singleGraphGenerationBtnActionPerformed

    private void saveTxtFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTxtFileBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                txtFileLocation = file.getAbsolutePath();
                saveTxtFeild.setText(txtFileLocation);
                
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_saveTxtFileBtnActionPerformed

    private void loadMultifrequencyExcelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMultifrequencyExcelBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                excelFileLocation = file.getAbsolutePath();
                loadMultiFrequencyTxt.setText(excelFileLocation);
                
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_loadMultifrequencyExcelBtnActionPerformed

    private void saveMultiFTxtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMultiFTxtBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                txtFreqFileLocation = file.getAbsolutePath();
                saveMultiFrequncyTxt.setText(txtFreqFileLocation);
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_saveMultiFTxtBtnActionPerformed

    private void mfTxtFileGenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mfTxtFileGenBtnActionPerformed
        // TODO add your handling code here:
        txtFreqFileLocation = txtFreqFileLocation.replace("\\", "/");
        excelFileLocation = excelFileLocation.replace("\\", "/");
        final File folder = new File(excelFileLocation);
        ExcelSheetProcessing exProcessing = new ExcelSheetProcessing();
        ArrayList uniqueNames;
        
        try {
                uniqueNames = exProcessing.readExcelFiles(folder);
                GetMatrixValuesWithFrequencies.readExcelFiles(folder, uniqueNames, txtFreqFileLocation);
        } catch (IOException ex) {
            Logger.getLogger(GraphAnalysis.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mfTxtFileGenBtnActionPerformed

    private void saveSingleFMatrixBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSingleFMatrixBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                singleFMatrixLocation = file.getAbsolutePath();
                saveSingleFMatrixTxt.setText(singleFMatrixLocation);
                
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
        
    }//GEN-LAST:event_saveSingleFMatrixBtnActionPerformed

    private void loadFMatrixBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFMatrixBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                txtFreqFileLocation = file.getAbsolutePath();
                loadFMtrixTxt.setText(txtFreqFileLocation);
                
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_loadFMatrixBtnActionPerformed

    private void singleFGraphGenerationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleFGraphGenerationBtnActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            txtFreqFileLocation = txtFreqFileLocation.replace("\\", "/");
            singleFMatrixLocation = singleFMatrixLocation.replace("\\", "/");
            ReadAllTheTextFilesandCreateOneFile.readingTheTextFiles(txtFreqFileLocation,singleFMatrixLocation);
            final File folder = new File(singleFMatrixLocation);
            adjacencyMarixWithFrequencies = ReadingMatrices.listFilesForFolder(folder);
        } catch (Exception ex) {
            Logger.getLogger(GraphAnalysis.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_singleFGraphGenerationBtnActionPerformed

    private void locationofSingleGMatrixBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationofSingleGMatrixBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                singleMatrixLocation = file.getAbsolutePath();
                locationofSingleGMatrixTxt.setText(singleMatrixLocation);
                
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_locationofSingleGMatrixBtnActionPerformed

    private void generateSubGraphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateSubGraphBtnActionPerformed
        try {
            // TODO add your handling code here:
            //		// TODO Auto-generated method stub
            long startTime   = System.currentTimeMillis();
            singleMatrixLocation = singleMatrixLocation.replace("\\", "/");
            final File folder = new File(singleMatrixLocation);
            
            
            //This contains all the adjacency matrice wjhoes diagonal values are zero and also undirected
            int[][][] adjacencyMarix = ReadingMatrices.listFilesForFolder(folder);
            
            
            
            
            //Generating the two matrices we need one containing the positions and the other contianing the number of repetitions
            GeneratringMatricesWithData genrateMatrices = new GeneratringMatricesWithData();
            ArrayList bothMatrices =genrateMatrices.processingMatrices(adjacencyMarix);
            
            
            //identification of unique node in the graphs
            UniqueNodes uniqueNodes = new UniqueNodes();
            List<Integer>[] arrayOfListUniqueNodes = uniqueNodes.allNodesMatrix(adjacencyMarix);
            
            
            IdentifySubGraphs identifySubGraphs = new IdentifySubGraphs();
            identifySubGraphs.identifySubGraphsWithSupport(2, 10, bothMatrices, arrayOfListUniqueNodes);
            
            long endTime   = System.currentTimeMillis();
            long totalTime = endTime - startTime;
            System.out.println("Time in millisecond: "+totalTime);
        } catch (Exception ex) {
            Logger.getLogger(GraphAnalysis.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_generateSubGraphBtnActionPerformed

    private void fMatrixLocationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fMatrixLocationBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            
                File file = fileChooser.getSelectedFile();
                singleFMatrixLocation = file.getAbsolutePath();
                fMatixLocationTxt.setText(singleFMatrixLocation);
                
                //System.out.println(file.getAbsolutePath());
           
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_fMatrixLocationBtnActionPerformed

    private void fMatrixGenrateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fMatrixGenrateBtnActionPerformed
        try {
            // TODO add your handling code here:
            singleFMatrixLocation = singleFMatrixLocation.replace("\\", "/");
            final File folder = new File(singleFMatrixLocation);

            //This contains all the adjacency matrice wjhoes diagonal values are zero and also undirected
            int[][][] adjacencyMarix = ReadingMatrices.listFilesForFolder(folder);
            int[][] FMatix = CreateTheFrequencyMatrix.getTheFrequencyMatrix(adjacencyMarix);
            System.out.println("This is testing");
        } catch (Exception ex) {
            Logger.getLogger(GraphAnalysis.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fMatrixGenrateBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fMatixLocationTxt;
    private javax.swing.JButton fMatrixGenrateBtn;
    private javax.swing.JButton fMatrixLocationBtn;
    private javax.swing.JButton generateSubGraphBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton loadExcelFilesBtn;
    private javax.swing.JTextField loadExcelTextFeild;
    private javax.swing.JButton loadFMatrixBtn;
    private javax.swing.JTextField loadFMtrixTxt;
    private javax.swing.JButton loadMatrixBtn;
    private javax.swing.JTextField loadMtxTxt;
    private javax.swing.JTextField loadMultiFrequencyTxt;
    private javax.swing.JButton loadMultifrequencyExcelBtn;
    private javax.swing.JButton locationofSingleGMatrixBtn;
    private javax.swing.JTextField locationofSingleGMatrixTxt;
    private javax.swing.JButton mfTxtFileGenBtn;
    private javax.swing.JButton saveMultiFTxtBtn;
    private javax.swing.JTextField saveMultiFrequncyTxt;
    private javax.swing.JButton saveSingleFMatrixBtn;
    private javax.swing.JTextField saveSingleFMatrixTxt;
    private javax.swing.JButton saveSingleMatrixBtn;
    private javax.swing.JTextField saveSingleMatrixTxt;
    private javax.swing.JTextField saveTxtFeild;
    private javax.swing.JButton saveTxtFileBtn;
    private javax.swing.JButton singleFGraphGenerationBtn;
    private javax.swing.JButton singleGraphGenerationBtn;
    private javax.swing.JButton textFileGenerationBtn;
    // End of variables declaration//GEN-END:variables
}
