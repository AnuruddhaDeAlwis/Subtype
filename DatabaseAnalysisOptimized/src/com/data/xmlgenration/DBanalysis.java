/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.data.xmlgenration;

import com.data.staticanalysis.AnalysingExtractedXMLValues;
import com.data.staticanalysis.ClusteringDatabaseTables;
import com.data.staticanalysis.WritingXMLExtractedValues;
import com.evaluatesimilarity.givenclusters.InsertingTablesIntoFilteredClusters;
import com.evaluatesimilarity.givenclusters.SimilarityCalculationGivenClusters;
import com.table.clustering.TableClustering;
import de.javasoft.plaf.synthetica.painter.SyntheticaBasicIconPainter;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;
import org.eclipse.php.internal.core.PHPVersion;
import org.eclipse.php.internal.core.ast.nodes.ASTParser;
import org.eclipse.php.internal.core.ast.nodes.Program;
import de.javasoft.plaf.synthetica.SyntheticaBlackEyeLookAndFeel;
import de.javasoft.plaf.synthetica.SyntheticaBlackMoonLookAndFeel;
import javax.swing.JButton;


/**
 *
 * @author N9572791
 */
public class DBanalysis extends javax.swing.JFrame {
    /**
     * Creates new form DBanalysis
     */
    
    static String phpFileLocations = "";
    static String xmlFileLocations = "";
    static String staticDataLocation = "";
    static String tableLocation = "";
    
    public DBanalysis() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        phpPathText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        xmlSavePathTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        loadXMLTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        saveStaticDataTextFeild = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        loadStaticDataTextFeild = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        saveTableTextFeild = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        loadTablesTextFeild = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DBAnalysis");
        setBackground(new java.awt.Color(0, 204, 102));

        jLabel1.setText("Select the php file locations for processing");

        phpPathText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phpPathTextActionPerformed(evt);
            }
        });

        jLabel2.setText("Select the location to save xml files");

        xmlSavePathTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xmlSavePathTxtActionPerformed(evt);
            }
        });

        jButton1.setText("Load Php Files");
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadPhpBtnActionPerformed(evt);
            }
        });

        jButton2.setText("Save XML Files");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveXMLBtnActionPerformed(evt);
            }
        });

        jButton3.setText("Execute");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(15, 469, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(xmlSavePathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(phpPathText, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(83, 83, 83))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phpPathText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xmlSavePathTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(54, 54, 54)
                .addComponent(jButton3)
                .addContainerGap(174, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("XML Generation", jPanel1);

        jButton4.setText("Load XML Files");
        jButton4.setFocusPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadXMLBtnActionPerformed(evt);
            }
        });

        loadXMLTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadXMLTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Select the php file locations for processing");

        jLabel4.setText("Select the location to save xml files");

        saveStaticDataTextFeild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStaticDataTextFeildActionPerformed(evt);
            }
        });

        jButton5.setLabel("Save Data");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataBtnActionPerformed(evt);
            }
        });

        jButton6.setText("Execute");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeXmlBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(saveStaticDataTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(loadXMLTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 250, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadXMLTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveStaticDataTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(56, 56, 56)
                .addComponent(jButton6)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        jButton4.getAccessibleContext().setAccessibleDescription("");

        jTabbedPane1.addTab("XML Processing", jPanel2);

        jLabel5.setText("Select the static data file");

        loadStaticDataTextFeild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadStaticDataTextFeildActionPerformed(evt);
            }
        });

        jButton7.setText("Load Data");
        jButton7.setActionCommand("");
        jButton7.setFocusPainted(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDataBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Select the location to save xml files");

        saveTableTextFeild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTableTextFeildActionPerformed(evt);
            }
        });

        jButton8.setText("Save Tables");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTablesBtnActionPerformed(evt);
            }
        });

        jButton9.setText("Execute");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeTableBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(15, 510, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(saveTableTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(loadStaticDataTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadStaticDataTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addGap(17, 17, 17)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveTableTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addGap(47, 47, 47)
                .addComponent(jButton9)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Table Identification", jPanel3);

        jLabel7.setText("Select the file with table names");

        loadTablesTextFeild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTablesTextFeildActionPerformed(evt);
            }
        });

        jButton11.setText("Execute");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeClusteringBtnActionPerformed(evt);
            }
        });

        jButton12.setText("Load Table");
        jButton12.setActionCommand("");
        jButton12.setFocusPainted(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTableBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(75, 75, 75))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(loadTablesTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                        .addGap(54, 54, 54))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadTablesTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12))
                .addGap(114, 114, 114)
                .addComponent(jButton11)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Clustering Tables", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("XML Generation");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTableBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            tableLocation = file.getAbsolutePath();
            loadTablesTextFeild.setText(tableLocation);
            //System.out.println(file.getAbsolutePath());
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_loadTableBtnActionPerformed

    private void executeClusteringBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeClusteringBtnActionPerformed
        // TODO add your handling code here:

        tableLocation = tableLocation.replace("\\", "/");
            List<List<String>> clusteringGroups = ClusteringDatabaseTables.generateTheClusteringGroups(tableLocation);

            //Following will have the number of relationships each table will have with the other.
            List<List<Integer>>  clusteringTableRlationships = ClusteringDatabaseTables.generateTheClusteringNumberOfRelationships(tableLocation);

            //Here we store tabel names based on the order they got processed. In clusteringTableRlationships it only contain the number
            //of relationships. But the table names should be find from the following ArrayList.
            List<List<String>> nameOfTheTables = ClusteringDatabaseTables.tableNamesGotProcessed(tableLocation);
            ArrayList allTableThatGotProccessed = ClusteringDatabaseTables.tableNamesGotProcessedWithoutDup(tableLocation);
            //printValues(clusteringGroups);

            //Median values of the table taken
            ArrayList medianValues = ClusteringDatabaseTables.returnMedianValues(tableLocation);

            //Here we basically identify the main table of the given cluster
            List<List<String>> reClusteredGroups = TableClustering.tableClustering(clusteringGroups);
            System.out.println("*****************The recluster groups***************");
            //printValues(reClusteredGroups);

            //Each table can be in multiple clusters. In order to minimize the search space, we identify the entropy of the
            //main table of each cluster and if it is lower thatn the one where it is repeated, that is assigned to the
            //particular cluster.
            List<List<String>>newClusters = SimilarityCalculationGivenClusters.identifyRepeatingTables(reClusteredGroups);
            //printValues(newClusters);
            System.out.println("*****************Finalized CLuster***************");

            List<List<String>>finalClusters = InsertingTablesIntoFilteredClusters.filteringTablesIntoCluster(newClusters, allTableThatGotProccessed);
            printValues(finalClusters);

            JPanel container = new JPanel();
            JPanel containerTwo = new JPanel();
            for(int i=0;i<finalClusters.size();i++){
                ArrayList temp = (ArrayList)finalClusters.get(i);
                String[] stockArr = new String[temp.size()];
                stockArr = (String[]) temp.toArray(stockArr);
                JList list = new JList(stockArr);
                list.setPreferredSize(new Dimension(150, 375));
                JScrollPane scrollableList = new JScrollPane(list);
                scrollableList.setPreferredSize(new Dimension(150, 375));

                JTextArea textArea = new JTextArea();
                textArea.setText(Integer.toString(i));
                textArea.setPreferredSize(new Dimension(150, 30));

                container.add(scrollableList,0,i);
                containerTwo.add(textArea,1,i);

            }

            JSplitPane splitTop = new JSplitPane(JSplitPane.VERTICAL_SPLIT, containerTwo, container);

            JScrollPane jsp = new JScrollPane(splitTop);

            JPanel one = new JPanel();

            // define items in a String array:
            String[] languages = new String[] {"English", "French", "Spanish", "Japanese", "Chinese"};
            // create a combo box with the fixed array:
            JComboBox<String> comboLanguage = new JComboBox<String>(languages);
            comboLanguage.setPreferredSize(new Dimension(150, 30));
            one.add(comboLanguage);
            
            JTextArea textAreaOne = new JTextArea(); 
            textAreaOne.setPreferredSize(new Dimension(150, 30));
            one.add(textAreaOne);
            
            JButton moveToBtn = new JButton("Move To");
            moveToBtn.setPreferredSize(new Dimension(75, 30));
            moveToBtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ae) {
				
			}
		});
            one.add(moveToBtn);
            

            JComboBox<String> comboLanguageTwo = new JComboBox<String>(languages);
            comboLanguageTwo.setPreferredSize(new Dimension(150, 30));
            one.add(comboLanguageTwo);
            
           
            JButton nextBtn = new JButton("Next");
            nextBtn.setPreferredSize(new Dimension(75, 30));
            nextBtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ae) {
				GraphAnalysis graphAnalysis = new GraphAnalysis();
                                graphAnalysis.setVisible(true);
			}
		});
            one.add(nextBtn);

            
            

            JSplitPane spLeft = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, one, jsp);
            spLeft.setContinuousLayout(true);

            jTabbedPane1.add(spLeft);
            jTabbedPane1.setSelectedIndex(4);
            jTabbedPane1.setTitleAt(4, "Clustered Tables");

    }//GEN-LAST:event_executeClusteringBtnActionPerformed

    private void loadTablesTextFeildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTablesTextFeildActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadTablesTextFeildActionPerformed

    //The exeuction of data file to extract tabel names is happening here.
    private void executeTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeTableBtnActionPerformed
        // TODO add your handling code here:
        staticDataLocation = staticDataLocation.replace("\\", "/");
            tableLocation = tableLocation.replace("\\", "/");
                AnalysingExtractedXMLValues.identifyTablesFromQueries(staticDataLocation,tableLocation);
    }//GEN-LAST:event_executeTableBtnActionPerformed

    //Give the location to save the table names
    private void saveTablesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTablesBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            tableLocation = file.getAbsolutePath();
            saveTableTextFeild.setText(tableLocation);
            //System.out.println(file.getAbsolutePath());
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_saveTablesBtnActionPerformed

    private void saveTableTextFeildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTableTextFeildActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveTableTextFeildActionPerformed

    //Give the location of the data file
    private void loadDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDataBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            staticDataLocation = file.getAbsolutePath();
            loadStaticDataTextFeild.setText(staticDataLocation);
            //System.out.println(file.getAbsolutePath());
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_loadDataBtnActionPerformed

    private void loadStaticDataTextFeildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadStaticDataTextFeildActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadStaticDataTextFeildActionPerformed

    //This is the place where it identify the static data in XML Files
    private void executeXmlBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeXmlBtnActionPerformed
        // TODO add your handling code here:
        xmlFileLocations = xmlFileLocations.replace("\\", "/");
            staticDataLocation = staticDataLocation.replace("\\", "/");
                final File staticASTCodeFiles = new File(xmlFileLocations);
                try {
                    WritingXMLExtractedValues.listFilesForStaticSql(staticASTCodeFiles,staticDataLocation);
                } catch (Exception ex) {
                    Logger.getLogger(DBanalysis.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_executeXmlBtnActionPerformed

    //give the saving location for the data files
    private void saveDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            staticDataLocation = file.getAbsolutePath();
            saveStaticDataTextFeild.setText(staticDataLocation);
            //System.out.println(file.getAbsolutePath());
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_saveDataBtnActionPerformed

    private void saveStaticDataTextFeildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStaticDataTextFeildActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveStaticDataTextFeildActionPerformed

    private void loadXMLTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadXMLTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadXMLTextFieldActionPerformed

    //loading the xml files
    private void loadXMLBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadXMLBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            xmlFileLocations = file.getAbsolutePath();
            loadXMLTextField.setText(xmlFileLocations);
            //System.out.println(file.getAbsolutePath());
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_loadXMLBtnActionPerformed

    //This is to execute and extract the values from the php files into xml
    private void executeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeBtnActionPerformed
        // TODO add your handling code here:
        phpFileLocations = phpFileLocations.replace("\\", "/");
            final File folderWithSugarCrmXmlFiles = new File(phpFileLocations);
            try {
                listFilesForFolder(folderWithSugarCrmXmlFiles);
            } catch (Exception ex) {
                Logger.getLogger(DBanalysis.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_executeBtnActionPerformed

    //This will show the place where user saves the xml files processed
    private void saveXMLBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveXMLBtnActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            xmlFileLocations = file.getAbsolutePath();
            xmlSavePathTxt.setText(xmlFileLocations);
            //System.out.println(file.getAbsolutePath());
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_saveXMLBtnActionPerformed

    //This is for loading the phpfile for exectuion
    private void loadPhpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadPhpBtnActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("Action");

            }
        });

        int status = fileChooser.showOpenDialog(null);

        if (status == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            phpFileLocations = file.getAbsolutePath();
            phpPathText.setText(phpFileLocations);
            //System.out.println(file.getAbsolutePath());
        } else if (status == JFileChooser.CANCEL_OPTION) {
            System.out.println("calceled");

        }
    }//GEN-LAST:event_loadPhpBtnActionPerformed

    private void xmlSavePathTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xmlSavePathTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xmlSavePathTxtActionPerformed

    private void phpPathTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phpPathTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phpPathTextActionPerformed

    
    
    
    
    
    
    
    
    
    	public static void listFilesForFolder(final File folder) throws Exception {
	    for (final File fileEntry : folder.listFiles()) {
	        if (fileEntry.isDirectory()) {
	            listFilesForFolder(fileEntry);
	        } else {
	            //System.out.println(fileEntry.getName());
	            //System.out.println(fileEntry.getAbsolutePath());
	            final ASTParser parser = ASTParser.newParser(PHPVersion.PHP7_1);
	            String ext1 = FilenameUtils.getExtension(fileEntry.getAbsolutePath());
	            if(ext1.equalsIgnoreCase("php")){
	            	parser.setSource(FileUtils.readFileToString(
	            			new File(fileEntry.getAbsolutePath()), "UTF-8").toCharArray());
	            	final Program node = parser.createAST(null);
	            	
	            	try{
	            		//This is if we need to get the individual eliments in an xml document
	            		final SimpleVisitor visitor = new SimpleVisitor();
	            		String fileNameWithOutExt = FilenameUtils.removeExtension(fileEntry.getName());
	            		visitor.classNameForTheFile(fileNameWithOutExt);
                                xmlFileLocations = xmlFileLocations.replace("\\", "/");
                                visitor.locationToSaveFile(xmlFileLocations);
	            		node.accept(visitor);
	            	}catch(Exception e){
	            		
	            	}

	            	
	            }
	            
	            
	        }
	    }
	}

        
        public static void printValues(List<List<String>> clusteringGroups){
		
		for(int i=0;i<clusteringGroups.size();i++){
			ArrayList names= (ArrayList) clusteringGroups.get(i);
			
			for(int j=0;j<names.size();j++){
				System.out.print(names.get(j)+", ");
			}
			System.out.println();
			System.out.println("--------------------------------------------------------------------------------");
		}
		
	}
	
	
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
          try {
            UIManager.setLookAndFeel(new SyntheticaBlackEyeLookAndFeel());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DBanalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DBanalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DBanalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DBanalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DBanalysis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField loadStaticDataTextFeild;
    private javax.swing.JTextField loadTablesTextFeild;
    private javax.swing.JTextField loadXMLTextField;
    private javax.swing.JTextField phpPathText;
    private javax.swing.JTextField saveStaticDataTextFeild;
    private javax.swing.JTextField saveTableTextFeild;
    private javax.swing.JTextField xmlSavePathTxt;
    // End of variables declaration//GEN-END:variables
}
